{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAmBA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EAEFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAGpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,G,GAEpBA,E,IAIFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBb,EAAAgB,OAAOC,QAAQ,qBAAoCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,OACzDM,QAAQC,IAAI,uBAAwCF,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IAE3DQ,OAAM,SAAAN,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBb,EAAAgB,OAAOM,QAAQ,oBAAmCJ,OAAfN,EAAS,QAAYM,OAANL,EAAM,OACxDM,QAAQC,IAAI,sBAAqCF,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IAxC3CU,SAASC,cAAc,SAE/BC,iBAAiB,UAAU,SAAAC,GACnCA,EAAMC,iBAON,IANA,IAAgCC,EAAAF,EAAMG,cAA9BhB,EAAwBe,EAAxBf,MAAOiB,EAAiBF,EAAjBE,KAAMC,EAAWH,EAAXG,OAEjBC,EAAeC,OAAOpB,EAAMqB,OAC1BC,EAAaF,OAAOH,EAAKI,OACzBE,EAAUH,OAAOF,EAAOG,OAErBtB,EAAW,EAAGA,GAAYwB,EAASxB,IAC1CV,EAAcU,EAAUoB,GAExBb,QAAQC,IAAI,eAAgBY,EAAc,WAAYpB,GACtDoB,GAAgBG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst formBlock = document.querySelector('.form');\n\nformBlock.addEventListener('submit', event => {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget;\n\n  let currentDelay = Number(delay.value);\n  const stepNumber = Number(step.value);\n  const amountP = Number(amount.value);\n\n  for (let position = 1; position <= amountP; position++) {\n    createPromise(position, currentDelay);\n\n    console.log('delayPromise', currentDelay, 'position', position);\n    currentDelay += stepNumber;\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","param","Notify","success","concat","console","log","catch","failure","document","querySelector","addEventListener","event","preventDefault","_currentTarget","currentTarget","step","amount","currentDelay","Number","value","stepNumber","amountP"],"version":3,"file":"03-promises.a4c02d5c.js.map"}